#!/bin/sh -ex

export CMAKE_CXX_COMPILER_LAUNCHER=ccache
export CMAKE_C_COMPILER_LAUNCHER=ccache

install_libpcap() {
    install_prefix=${1:?'install_prefix required'}
    mkdir libpcap
    wget -qO - https://github.com/the-tcpdump-group/libpcap/archive/libpcap-1.9.1.tar.gz |
        tar -xzf - -C libpcap --strip-components 1
    cmake -D CMAKE_INSTALL_PREFIX="$install_prefix" -D ENABLE_REMOTE=OFF \
        -G Ninja -S libpcap -B libpcap/build
    ccache -z
    ninja -C libpcap/build
    ccache -s
    $sudo ninja -C libpcap/build install
    rm -r libpcap
}

case $(uname) in
    Darwin)
        sudo=sudo
        brew install bison ccache libmaxminddb ninja openssl
        ;;
    Linux)
        sudo=sudo
        sudo apt-get -y install bison ccache flex libmaxminddb-dev libssl-dev ninja-build python3-setuptools
        # Compile a recent libpcap since the one we'd get via apt-get is
        # old and hits https://github.com/brimsec/zeek/issues/17.
        install_libpcap /
        ;;
    *_NT-*)
        exe=.exe
        export CMAKE_GENERATOR='MSYS Makefiles'  # For Zeek plugins.
        export MSYS=winsymlinks:nativestrict
        export PATH=/mingw64/bin:$PATH
        go build -o brim/zeekrunner.exe brim/zeekrunner.go
        pacman -S --needed --noconfirm \
            bison flex make mingw-w64-x86_64-ccache \
            mingw-w64-x86_64-cmake mingw-w64-x86_64-gcc \
            mingw-w64-x86_64-libmaxminddb mingw-w64-x86_64-ninja \
            mingw-w64-x86_64-openssl python3-setuptools zip
        install_libpcap /mingw64
        # Replace some symlinks with a copy of the target file because
        # CMake chokes on them with "file INSTALL cannot read symlink"
        # during installation.
        for f in cmake/BroPlugin.cmake src/file_analysis/analyzer/x509/x509-signed_certificate_timestamp.pac; do
            cp $f $f.tmp
            rm $f
            mv $f.tmp $f
        done
        # Need this until Broker updates to CAF 0.18.0.
        sed -i 's/NOT WIN32/1/' auxil/broker/caf/libcaf_openssl/CMakeLists.txt
        # Put an ln that can create a symbolic link to "." in the search
        # path ahead of /usr/bin/ln (which cannot do that) for use by
        # zeek-plugin-install-package.sh.
    cat > /mingw64/bin/ln <<'EOF'
#!/bin/sh
if [ "$1" = -s ]; then
    shift
    exec cmake -E create_symlink "$@"
fi
exec /usr/bin/ln "$@"
EOF
        ;;
    *)
        echo "unknown OS: $(uname)" >&2
        exit 1
        ;;
esac

#
# Install Zeek.
#

./configure \
    --binary-package --disable-archiver --disable-auxtools --disable-broker-tests \
    --disable-python --disable-zeekctl --enable-static-binpac \
    --enable-static-broker --generator=Ninja --osx-min-version=10.14

ccache -z
ninja -C build
ccache -s

$sudo ninja -C build install/strip

#
# Install Zeek packages.  We don't use zkg because it doesn't work well
# on Windows due to symlink issues and because it copies entire plugin
# build directories to /usr/local/zeek/lib/zeek/plugins/packages/.
#

zkg_meta() {
    section=${1:?'section required'}
    option=${2:?'option required'}
    python3 <<EOF
import configparser
c = configparser.ConfigParser()
c.read('zkg.meta')
print(c.get('$section', '$option', fallback=''))
EOF
}

install_zeek_package() {
    github_repo=${1:?'github_repo required'}
    git_ref=${2:?'git_ref required'}
    package=${github_repo#*/}
    mkdir $package
    (
        export PATH=/usr/local/zeek/bin:$PATH
        cd $package
        wget -qO - https://github.com/$github_repo/tarball/$git_ref |
            tar -xzf - --strip-components 1

        script_dir=$(zkg_meta package script_dir)
        $sudo cp -r "$script_dir" /usr/local/zeek/share/zeek/site/$package/

        build_command=$(zkg_meta package build_command)
        if [ "$build_command" ]; then
            if [ "$OS" = Windows_NT ]; then
                export LDFLAGS='-static -Wl,--allow-multiple-definition'
            fi
            sh -c "$build_command"
            $sudo tar -xf build/*.tgz -C /usr/local/zeek/lib/zeek/plugins
        fi

        test_command=$(zkg_meta package test_command)
        if [ "$test_command" ]; then
            # Btest fails without explanation on the GitHub Actions
            # Windows runners, so skip tests there.
            if [ "$GITHUB_ACTIONS" != true -o "$OS" != Windows_NT ]; then
               sh -c "$test_command"
            fi
        fi

        echo "@load $package" | $sudo tee -a /usr/local/zeek/share/zeek/site/local.zeek
    )
    rm -r $package
}

$sudo pip3 install btest wheel

install_zeek_package brimsec/geoip-conn ad338676ed1b221bb33f838e0359c5005ffa035e
install_zeek_package corelight/zeek-community-id 181a104b99d9019771ece7e489e46f2268b746d8
install_zeek_package salesforce/hassh cfa2315257eaa972e86f7fcd694712e0d32762ff
install_zeek_package salesforce/ja3 133f2a128b873f9c40e4e65c2b9dc372a801cf24

#
# Create zip file.
#

mkdir -p zeek/bin zeek/lib/zeek zeek/share/zeek
cp brim/zeekrunner$exe zeek/
cp /usr/local/zeek/bin/zeek$exe zeek/bin/
cp -R /usr/local/zeek/lib/zeek/plugins zeek/lib/zeek/
for d in base policy site; do
    cp -R /usr/local/zeek/share/zeek/$d zeek/share/zeek/
done

# Can't use --diry with "git describe" on Windows because of the symlink
# shenanigans.
zip -r zeek-$(git describe --always --tags).$(go env GOOS)-$(go env GOARCH).zip zeek
